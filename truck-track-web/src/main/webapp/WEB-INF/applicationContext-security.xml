<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/security
		http://www.springframework.org/schema/security/spring-security-3.1.xsd">
	
    <http pattern="/templates/**" security="none"/>    
    <http pattern="/tags/**" security="none"/>
 	<http pattern="/styles/**" security="none"/>
    	
    <!-- enable use-expressions -->
	<http auto-config="true" use-expressions="true">
		
		<intercept-url pattern="/" access="permitAll()" />
        <intercept-url pattern="/homepage" access="permitAll()" />
	    <intercept-url pattern="/register/**" access="permitAll()"/>
	    <intercept-url pattern="/auth/**" access="permitAll()"/>
        
		<intercept-url pattern="/cargo/**" access="hasRole('ROLE_USER')"/>
		<intercept-url pattern="/customer/**" access="hasRole('ROLE_USER')"/>
		<intercept-url pattern="/vehicle/**" access="hasRole('ROLE_USER')"/>
        
        <form-login 
        	login-page="/auth/login" 
        	authentication-failure-url="/auth/failure"
        	default-target-url="/homepage" />
                
        <logout 
			invalidate-session="true" 
			logout-success-url="/auth/login" 
			logout-url="/auth/logout"/>

	</http>
	
	<!-- Declare an authentication-manager to use a custom userDetailsService -->
	<authentication-manager>
        <authentication-provider user-service-ref="authUserService">
        	<password-encoder ref="passwordEncoder" />
        </authentication-provider>
	</authentication-manager>

	<beans:bean id="passwordEncoder" class="org.springframework.security.authentication.encoding.ShaPasswordEncoder">
		<beans:constructor-arg value="1" />
	</beans:bean>

	<!-- A custom service where Spring will retrieve users and their corresponding access levels  -->
	<beans:bean id="authUserService" class="com.trucktrack.core.authuser.AuthUserService">
		<beans:property name="userDAO" ref="userDAO" />
	</beans:bean>

</beans:beans>